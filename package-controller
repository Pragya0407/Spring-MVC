package com.javatpoint.dao;
2. import java.sql.ResultSet;
3. import java.sql.SQLException;
4. import java.util.List;
5. import org.springframework.jdbc.core.BeanPropertyRowMapper;
6. import org.springframework.jdbc.core.JdbcTemplate;
7. import org.springframework.jdbc.core.RowMapper;
8. import com.javatpoint.beans.Emp;
9.
10. public class EmpDao {
11. JdbcTemplate template;
12.
13. public void setTemplate(JdbcTemplate template) {
14. this.template = template;
15. }
16. public int save(Emp p){
17. String sql="insert into Emp99(name,salary,designation) values('"+p.getName()+"',"
18. +p.getSalary()+",'"+p.getDesignation()+"')";
19. return template.update(sql);
20. }
21. public int update(Emp p){
22. String sql="update Emp99 set name='"+p.getName()+"', salary="+p.getSalary()+",designation='"
23. +p.getDesignation()+"' where id="+p.getId()+"";
24. return template.update(sql);
25. }
26. public int delete(int id){
27. String sql="delete from Emp99 where id="+id+"";
28. return template.update(sql);
29. }
30. public Emp getEmpById(int id){
31. String sql="select * from Emp99 where id=?";
32. return template.queryForObject(sql, new Object[]{id},new
33. BeanPropertyRowMapper<Emp>(Emp.class));
34. }
35. public List<Emp> getEmployees(){
36. return template.query("select * from Emp99",new RowMapper<Emp>(){
37. public Emp mapRow(ResultSet rs, int row) throws SQLException {
38. Emp e=new Emp();
39. e.setId(rs.getInt(1));
40. e.setName(rs.getString(2));
41. e.setSalary(rs.getFloat(3));
42. e.setDesignation(rs.getString(4));
43. return e;
44. }
45. });
46. }
47. }
